{"version":3,"sources":["Search.js","style.js","SearchTwo.js","NavBar.js","App.js","index.js"],"names":["Search","state","location","handleSubmit","e","preventDefault","props","storm","setState","handleChange","document","getElementById","value","this","weather","classes","defaults","theme","displayWeather","Grid","item","xs","Card","variant","className","root","CardHeader","title","name","country","subheader","description","CardMedia","media","icon","color","size","animate","CardContent","Typography","end","Number","temp","decimals","duration","max","min","humidity","sunriseLocal","sunsetLocal","fontSize","localTime","Container","TextField","required","onChange","inputProps","outlinedRoot","id","label","type","margin","Button","onClick","button","text","align","Component","withStyles","fontWeight","paddingTop","paddingBottom","maxWidth","background","borderRadius","backgroundColor","fade","palette","common","white","height","withTheme","useStyles","makeStyles","container","SearchTwo","useState","setLocation","flexGrow","menuButton","marginRight","spacing","NavBar","Toolbar","App","main","sunrise","sunset","lt","Date","timeZone","axios","get","then","res","data","temp_max","temp_min","sys","timezone","handleTime","time","dif","difer","setHours","getHours","sunyBoi","toGMTString","slice","sunSun","finalTime","tod","Tod","wd","timeOfDay","weatherIcons","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a2d74652.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { Button, Card, CardContent, CardHeader, Container, Typography, Grid, CardMedia } from '@material-ui/core';\nimport {withStyles, fade} from '@material-ui/core/styles';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\nimport ReactAnimatedWeather from 'react-animated-weather';\nimport CountUp from 'react-countup';\n\n\nconst styles = theme =>({\n    title:{\n    color:\"snow\",\n    fontWeight:\"bold\",\n    paddingTop:\"50px\",\n    paddingBottom:\"15px\"\n    },\n    root: {\n      maxWidth: 250,\n      background:\"snow\",\n      borderRadius:\"25px\",\n    },\n    outlinedRoot :{\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: \"azure\",\n        }\n    },\n    button:{\n        backgroundColor:\"royalblue\",\n        '&:hover': {\n            backgroundColor: \"lightblue\",\n        }\n    },\n    text:{\n        color:\"snow\"\n    },\n      media: {\n        height:100,\n      }\n})\n\nclass Search extends Component{\n    state ={\n        location :''\n    }\n    //functions---------------------------------------------------------------------------\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.storm(this.state.location)\n        this.setState({location:''})\n    }\n    handleChange = (e)=>{\n        this.setState({location:document.getElementById(\"textSearch\").value})\n    }\n    render(){\n        //destructuring props from appjs\n        const {weather, storm,classes,theme} = this.props\n        let defaults = {\n            size: 100,\n            animate: true\n        }\n        const displayWeather = \n        <Grid item xs={12}>\n            <Card variant=\"outlined\" className={classes.root}>\n                <CardHeader title={weather.name +\" \"+ weather.country}  subheader={weather.description}/>\n                <CardMedia className={classes.media}> \n                <ReactAnimatedWeather\n                      icon={weather.icon}\n                      color={weather.color}\n                      size={defaults.size}\n                      animate={defaults.animate}\n                />\n                 </CardMedia>\n                <CardContent>\n                    <Typography variant=\"h5\"> Temp : <CountUp end={Number(weather.temp)} decimals={1} duration={6} /> °C</Typography>\n                    <Typography variant=\"subtitle1\"> Max : <CountUp end={Number(weather.max)} decimals={1} duration={6}/> °C</Typography>\n                    <Typography variant=\"subtitle1\"> Min : <CountUp end={Number(weather.min)} decimals={1} duration={6}/> °C</Typography>\n                    <Typography variant=\"subtitle1\"> Humidity : <CountUp  end={Number(weather.humidity)} duration={6}/>  %</Typography>\n                    <Typography variant=\"subtitle1\" > Sunrise : {weather.sunriseLocal} <BrightnessHighIcon/> </Typography>\n                    <Typography variant=\"subtitle1\">  Sunset : {weather.sunsetLocal}   <Brightness2Icon fontSize=\"small\"/></Typography>\n                    <Typography variant=\"subtitle2\" > time in {weather.name} :  {weather.localTime} </Typography>\n                </CardContent>\n            </Card>\n        </Grid>    \n        return(\n            <div>\n                <Container  xs={12}>\n                <Typography variant=\"h5\" className={classes.title}>Get the current weather on any city</Typography>\n                    <TextField required onChange={this.handleChange} inputProps={{className:classes.outlinedRoot}} \n                        id=\"textSearch\"\n                        label=\"Enter location\"\n                        type=\"search\"\n                        value={this.state.location}\n                        margin=\"normal\"\n                        variant=\"outlined\"       \n                    /><br/>\n                    <Button onClick={this.handleSubmit} variant=\"contained\" className={classes.button}  >\n                       <Typography className={classes.text}> submit</Typography> \n                    </Button>\n                </Container><br/>\n                <Grid  align=\"center\"  >\n                {displayWeather}\n                </Grid>\n            </div>\n        )\n    }\n}\nexport default withStyles(styles,{withTheme:true}) (Search);","import {makeStyles, fade}  from '@material-ui/core/styles';\n\nconst  useStyles = makeStyles ((theme)=> ({\n container: {},\n title:{\n    color:\"snow\",\n    fontWeight:\"bold\",\n    paddingTop:\"50px\",\n    paddingBottom:\"15px\"\n    },\n    root: {\n      maxWidth: 250,\n      background:\"snow\",\n      borderRadius:\"25px\",\n    },\n    outlinedRoot :{\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: \"azure\",\n        }\n    },\n    button:{\n        backgroundColor:\"royalblue\",\n        '&:hover': {\n            backgroundColor: \"lightblue\",\n        }\n    },\n    text:{\n        color:\"snow\"\n    },\n      media: {\n        height:100,\n      }\n}))\n\nexport default useStyles;","import React, {useState} from 'react';\nimport useStyles from './style';\nimport TextField from '@material-ui/core/TextField';\nimport { Button, Card, CardContent, CardHeader, Container, Typography, Grid, CardMedia } from '@material-ui/core';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\nimport ReactAnimatedWeather from 'react-animated-weather';\nimport CountUp from 'react-countup';\n\nconst SearchTwo = ({weather, storm}) =>{\n//set the state with hooks\n    const [location,setLocation] = useState('')\n//-------------------------------------------------\n    const classes = useStyles();\n//functions---------------------------------------------------------------------------\n        const handleSubmit = (e) =>{\n            e.preventDefault();\n            storm(location)\n            setLocation('')\n        }\n        const handleChange = (e)=>{\n            setLocation(document.getElementById(\"textSearch\").value)\n        }\n//--------------------------------------------------------------------------------\n        let defaults = {\n            size: 100,\n            animate: true\n        }\n        const displayWeather = \n        <Grid item xs={12}>\n            <Card variant=\"outlined\" className={classes.root}>\n                <CardHeader title={weather.name +\" \"+ weather.country}  subheader={weather.description}/>\n                <CardMedia className={classes.media}> \n                <ReactAnimatedWeather\n                      icon={weather.icon}\n                      color={weather.color}\n                      size={defaults.size}\n                      animate={defaults.animate}\n                />\n                 </CardMedia>\n                <CardContent>\n                    <Typography variant=\"h5\"> Temp : <CountUp end={Number(weather.temp)} decimals={1} duration={6} /> °C</Typography>\n                    <Typography variant=\"subtitle1\"> Max : <CountUp end={Number(weather.max)} decimals={1} duration={6}/> °C</Typography>\n                    <Typography variant=\"subtitle1\"> Min : <CountUp end={Number(weather.min)} decimals={1} duration={6}/> °C</Typography>\n                    <Typography variant=\"subtitle1\"> Humidity : <CountUp  end={Number(weather.humidity)} duration={6}/>  %</Typography>\n                    <Typography variant=\"subtitle1\" > Sunrise : {weather.sunriseLocal} <BrightnessHighIcon/> </Typography>\n                    <Typography variant=\"subtitle1\">  Sunset : {weather.sunsetLocal}   <Brightness2Icon fontSize=\"small\"/></Typography>\n                    <Typography variant=\"subtitle2\" > time in {weather.name} :  {weather.localTime} </Typography>\n                </CardContent>\n            </Card>\n        </Grid>    \n        return(\n            <div>\n                <Container  xs={12}>\n                <Typography variant=\"h5\" className={classes.title}>Get the current weather on any city</Typography>\n                    <TextField required onChange={handleChange} inputProps={{className:classes.outlinedRoot}} \n                        id=\"textSearch\"\n                        label=\"Enter location\"\n                        type=\"search\"\n                        value={location}\n                        margin=\"normal\"\n                        variant=\"outlined\"       \n                    /><br/>\n                    <Button onClick={handleSubmit} variant=\"contained\" className={classes.button}  >\n                       <Typography className={classes.text}> submit</Typography> \n                    </Button>\n                </Container><br/>\n                <Grid  align=\"center\"  >\n                    {displayWeather}\n                </Grid>\n            </div>\n        )\n}\nexport default SearchTwo;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color:\"snow\",\n    fontWeight:\"bold\"\n  },\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      \n        <Toolbar>\n          <Typography variant=\"h4\" align=\"center\" className={classes.title}>\n            Weather App\n          </Typography>\n        </Toolbar>\n      \n    </div>\n  );\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Search from './Search';\nimport SearchTwo from './SearchTwo';\nimport {Container, Typography} from '@material-ui/core';\nimport NavBar from './NavBar';\nimport './App.css';\nclass App extends Component{\n  state ={\n    weather:{\n      name:'',temp:'', max:'', min:'', humidity:'', description:'',main:'',country:'',sunrise:'',sunset:'',lt:new Date(),timeZone:'',defaults:''\n    }\n  }\n  componentDidMount() {\n      let DefaultLocation = \"London\";\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${DefaultLocation}&units=metric&APPID=83887d83799dc9b74bffffc1b572c8a0`)\n      .then( res =>{\n            this.setState({weather:{ name:res.data.name,temp:res.data.main.temp, max:res.data.main.temp_max, min:res.data.main.temp_min, humidity:res.data.main.humidity, description:res.data.weather.[0].description,main:res.data.weather.[0].main,country:res.data.sys.country,sunrise:new Date(res.data.sys.sunrise*1000),sunset:new Date(res.data.sys.sunset*1000),lt:new Date(),timeZone:(res.data.timezone/60)/60}    \n                    })\n      this.handleTime(this.state.weather.sunrise,this.state.weather.timeZone,this.state.weather.sunset,this.state.weather.lt,this.state.weather.main)\n    })\n  }\n//function Storm\nstorm = (name) => {\n  axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${name}&units=metric&APPID=83887d83799dc9b74bffffc1b572c8a0`)\n    .then( res =>{\n      \n      this.setState({weather:{ name:res.data.name,temp:res.data.main.temp, max:res.data.main.temp_max, min:res.data.main.temp_min, humidity:res.data.main.humidity, description:res.data.weather.[0].description,main:res.data.weather.[0].main,country:res.data.sys.country, sunrise:new Date(res.data.sys.sunrise*1000),sunset: new Date(res.data.sys.sunset*1000),lt:new Date(),timeZone:(res.data.timezone/60)/60 } \n      })\n      this.handleTime(this.state.weather.sunrise,this.state.weather.timeZone,this.state.weather.sunset,this.state.weather.lt,this.state.weather.main)\n    })\n}\n//change sunrise sunset time to time zone of the location\nhandleTime= (time,dif,sunset,localTime,main) =>{\n  let locale = time\n  let difer= Number(dif)\n  sunset.setHours(sunset.getHours()+ difer)\n  let sunyBoi = sunset.toGMTString().slice(16,25)\n  time.setHours(time.getHours() + difer)\n  let sunSun = time.toGMTString().slice(16,25)\n  let weather = this.state.weather\n  localTime.setHours(localTime.getHours() + difer)\n  let finalTime = localTime.toGMTString().slice(16,22)\n    let Tod = () =>{ if(finalTime.slice(0,3) > 6 && finalTime.slice(0,3) <18){\n        return \"day\"\n        } else {\n        return \"night\"\n        }\n      }\n  let tod = Tod();\n  weather.sunriseLocal = sunSun\n  weather.sunsetLocal = sunyBoi\n  weather.localTime = finalTime\n  weather.Tod = tod\n    let weatherIcons = (wd,timeOfDay) =>{\n        let defaults;\n        switch (wd +\" \"+ timeOfDay) {\n          case \"Clear day\":\n            defaults = {\n              icon: 'CLEAR_DAY',\n              color: 'goldenrod'\n            }  \n          break;\n          case \"Clear night\":\n              defaults = {\n                icon: 'CLEAR_NIGHT',\n                color: 'lightblue'\n              }\n          break;\n          case \"Clouds day\":\n              defaults = {\n              icon: 'PARTLY_CLOUDY_DAY',\n              color: 'lightgray'\n            }  \n          break;\n          case \"Clouds night\":\n            defaults = {\n              icon: 'PARTLY_CLOUDY_NIGHT',\n              color: 'lightblue'\n            }  \n          break;\n          case \"Rain night\":\n            defaults = {\n            icon: 'RAIN',\n            color: 'lightblue'\n          }  \n          break;\n          case \"Rain day\":\n            defaults = {\n            icon: 'RAIN',\n            color: 'lightgrey'\n          }  \n          break;\n          case \"Sleet night\":\n            defaults = {\n            icon: 'SLEET',\n            color: 'lightblue'\n          }  \n          break;\n          case \"Sleet day\":\n            defaults = {\n            icon: 'SLEET',\n            color: 'lightgray'\n          }  \n          break;\n          case \"Snow day\" :\n            defaults = {\n            icon: 'SNOW',\n            color: 'lightgray'\n          }  \n          break;\n          case \"Snow night\":\n            defaults = {\n            icon: 'SNOW',\n            color: 'lightblue'\n          }  \n          break;\n          case \"Windy day\" :\n            defaults = {\n            icon: 'WIND',\n            color: 'lightgray'\n          }  \n          break;\n          case \"Windy night\":\n            defaults = {\n            icon: 'WIND',\n            color: 'lightblue'\n          }  \n          break;\n          case \"Fog day\" :\n            defaults = {\n            icon: 'FOG',\n            color: 'lightgray'\n          }  \n          break;\n          case \"Fog night\":\n            defaults = {\n            icon: 'FOG',\n            color: 'lightblue'\n          }  \n          break;\n          case \"Mist day\" :\n            defaults = {\n            icon: 'FOG',\n            color: 'lightgray'\n          }  \n          break;\n          case \"Mist night\":\n            defaults = {\n            icon: 'FOG',\n            color: 'lightblue'\n          }  \n          break;\n          case \"Drizzle day\" :\n            defaults = {\n            icon: 'SLEET',\n            color: 'lightgray'\n          }  \n          break;\n          case \"Drizzle night\":\n            defaults = {\n            icon: 'SLEET',\n            color: 'lightblue'\n          }  \n          break;\n          default :\n            defaults = {\n            icon: 'CLEAR_DAY',\n            color: 'lightyellow'\n          }  \n          break;\n        }\n        return defaults\n      }\n    let defaults = weatherIcons(main,weather.Tod)\n    weather.defaults = defaults;\n    weather.icon = defaults.icon;\n    weather.color=defaults.color;\n    this.setState({weather}) \n  }\n  render() {\n    return (\n      <div >\n        <NavBar />\n        <Container align=\"center\" >\n            <SearchTwo  weather={this.state.weather} storm={this.storm}/>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}